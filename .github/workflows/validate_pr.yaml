name: validate pull request

on:
  pull_request:
    branches:
      - main

permissions:
  contents: none

jobs:
  validate:
    name: validate
    strategy:
      matrix:
        arch: [ x64, arm64 ]
    runs-on: github-hosted-ubuntu-${{ matrix.arch }}-small
    permissions:
      contents: read
      id-token: write
    container:
      image: ghcr.io/grafana/grafana-build-tools:v1.14.0@sha256:976d7ceebf570f078ef136580d6abb1bc68d921ac8c716ed3528fcccb16a7a6a
    steps:
      - name: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: false

      - name: set up global git config
        run: |
          # The directory where the code has been checked out ends up belonging
          # to a different user, so git complains about permissions. Indicate
          # that it's safe to ignore.
          git config --global --add safe.directory '*'

      - name: retrieve secrets
        id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@7d18a46aafb8b875ed76a0bc98852d74b91e7f91 # v1.0.0
        with:
          repo_secrets: |
            SM_CI_APP_ID=synthetic-monitoring-ci:app-id
            SM_CI_APP_PRIVATE_KEY=synthetic-monitoring-ci:private-key

      - name: create GitHub app token
        id: app-token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        with:
          app-id: ${{ env.SM_CI_APP_ID }}
          private-key: ${{ env.SM_CI_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: create Git credentials
        id: git-credentials
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          APP_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          echo "machine github.com login ${GITHUB_ACTOR} password ${APP_TOKEN}" >> ~/.netrc
          chmod 600 ~/.netrc

      - name: ensure dependencies are up-to-date
        run: |
          make deps
          scripts/enforce-clean

      - name: version
        id: version
        run: |
          make version
          echo "value=$(cat dist/version)" >> "$GITHUB_OUTPUT"

      - name: identify platform
        id: id-platform
        run: |
          echo "platform=$(go env GOOS)/$(go env GOARCH)" >> "$GITHUB_OUTPUT"

      - name: build
        run: make build-native
 
      - name: lint
        run: make lint

      - name: test
        run: make test

      - name: find Dockerfile
        id: find-dockerfile
        run: |
          if test -e Dockerfile ; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: test docker build
        uses: grafana/shared-workflows/actions/build-push-to-dockerhub@7d18a46aafb8b875ed76a0bc98852d74b91e7f91 # v1.0.0
        if: steps.find-dockerfile.outputs.found == 'true'
        with:
          push: false
          platforms: |-
            ${{ steps.id-platform.outputs.platform }}
          tags: |-
            type=raw,value=${{ steps.version.outputs.value }}
            type=sha,prefix=sha-,format=short
            latest
